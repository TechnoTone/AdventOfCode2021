import day_18
from utils import Input

EXAMPLE1 = Input.ex(18, 1).lines()
DATA = Input.day(18).lines()


def test_day_18_reduce_explosions():
    assert day_18.reduce_once("[[[[[9,8],1],2],3],4]") == "[[[[0,9],2],3],4]"
    assert day_18.reduce_once("[7,[6,[5,[4,[3,2]]]]]") == "[7,[6,[5,[7,0]]]]"
    assert day_18.reduce_once("[[6,[5,[4,[3,2]]]],1]") == "[[6,[5,[7,0]]],3]"
    assert (
        day_18.reduce_once("[[3,[2,[1,[7,3]]]],[6,[5,[4,[3,2]]]]]")
        == "[[3,[2,[8,0]]],[9,[5,[4,[3,2]]]]]"
    )
    assert (
        day_18.reduce_once("[[3,[2,[8,0]]],[9,[5,[4,[3,2]]]]]")
        == "[[3,[2,[8,0]]],[9,[5,[7,0]]]]"
    )


def test_day_18_reduce_splits():
    assert (
        day_18.reduce_once("[[[[0,7],4],[15,[0,13]]],[1,1]]")
        == "[[[[0,7],4],[[7,8],[0,13]]],[1,1]]"
    )
    assert (
        day_18.reduce_once("[[[[0,7],4],[[7,8],[0,13]]],[1,1]]")
        == "[[[[0,7],4],[[7,8],[0,[6,7]]]],[1,1]]"
    )


def test_day_18_full_reduce():
    assert (
        day_18.full_reduce("[[[[[4,3],4],4],[7,[[8,4],9]]],[1,1]]")
        == "[[[[0,7],4],[[7,8],[6,0]]],[8,1]]"
    )


def test_day_18_sums():
    assert (
        day_18.sum_snailfish(["[1,1]", "[2,2]", "[3,3]", "[4,4]"])
        == "[[[[1,1],[2,2]],[3,3]],[4,4]]"
    )
    assert (
        day_18.sum_snailfish(["[1,1]", "[2,2]", "[3,3]", "[4,4]", "[5,5]"])
        == "[[[[3,0],[5,3]],[4,4]],[5,5]]"
    )
    assert (
        day_18.sum_snailfish(["[1,1]", "[2,2]", "[3,3]", "[4,4]", "[5,5]", "[6,6]"])
        == "[[[[5,0],[7,4]],[5,5]],[6,6]]"
    )
    assert (
        day_18.sum_snailfish(
            [
                "[[[0,[4,5]],[0,0]],[[[4,5],[2,6]],[9,5]]]",
                "[7,[[[3,7],[4,3]],[[6,3],[8,8]]]]",
                "[[2,[[0,8],[3,4]]],[[[6,7],1],[7,[1,6]]]]",
                "[[[[2,4],7],[6,[0,5]]],[[[6,8],[2,8]],[[2,1],[4,5]]]]",
                "[7,[5,[[3,8],[1,4]]]]",
                "[[2,[2,2]],[8,[8,1]]]",
                "[2,9]",
                "[1,[[[9,3],9],[[9,0],[0,7]]]]",
                "[[[5,[7,4]],7],1]",
                "[[[[4,2],2],6],[8,7]]",
            ]
        )
        == "[[[[8,7],[7,7]],[[8,6],[7,7]]],[[[0,7],[6,6]],[8,7]]]"
    )


def test_day_18_magnitude():
    assert (
        day_18.magnitude("[[[[8,7],[7,7]],[[8,6],[7,7]]],[[[0,7],[6,6]],[8,7]]]")
        == 3488
    )


def test_day_18_part_1_ex_01():
    assert day_18.part_1(EXAMPLE1) == 4140


def test_day_18_part_1_solution():
    assert day_18.part_1(DATA) == 3524


def test_day_18_part_2_ex_01():
    assert day_18.part_2(EXAMPLE1) == 3993


def test_day_18_part_2_solution():
    assert day_18.part_2(DATA) == 4656
